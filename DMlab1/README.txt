                                                        
                                                       Документация к использванию

Пакет для работы с множествами
Пакет предназначен для выполнения теоретико-множественных операций с множествами строк ограниченной 
длины.
***************************************************************************************************************************

Список функций

Вывод множества на экран
void SetPrint(set_t * set) 
На вход: указатель на переменную структуры set_t

Вывод всех множеств на экран
void SetAllPrint()

Создание множества (Строка с кавычками)
set_t* SetCreate(char* name, error_t* err)
На вход: имя множества, указатель на элемент типа  error_t для храения доп. информации

Поиск множества по заданному имени
set_t* SetFind(char* name)
На вход: имя, по которому производится поиск

Удаление существующего множеста
void SetDestroy(set_t* set) 
На вход: указатель на элемент, который хотим удалить

Объединение множеств
set_t* SetUnion(set_t* set1, set_t* set2)
На вход: ссылки на множества, которые хотим объеденить
На выходе: ссылка на полученное множество

Проверка включения set1 в set2
bool_t SetCheckContain(set_t* set1, set_t* set2)
На вход: ссылки на множества, которые сравниваем
На выходе: переменная типа bool_t (true или false)

Добавление множества в список множеств
void SetAddToList(set_t* set) 
На вход: ссылка на множетсво, которое хотим добавить

Уничтожение множества по имени
void Destroy(char* name, error_t* err)
На вход: имя множества, которое хотим удалить, указатель на элемент типа  error_t для храения доп. информации

Отображение ошибки
void ErrorMessage(error_t err) 
На вход: переменная типа error_t

void Create(char* name, error_t* err) 
На вход: имя множества, которое хотим создать, указатель на элемент типа  error_t для храения доп. информации

Проверка, равны ли два элемента
bool_t IsElemsEqual(elem_t* elem1, elem_t* elem2)
На вход: ссылки, на сравневыемые элементы
На выход: переменная типа bool_t

Проверка, принадлежит ли элемент множеству
elem_t* ElemFind(set_t* set, char* str) 
На вход: ссылка на множество, искомый элемент
На выходе: ссылка на на найденный элемент

удалить элемент из множества
bool_t ElemRemove(set_t* set, elem_t* elem)
На вход: ссылка на множество, ссылка на элемент в этом множестве
На выход: true или false

Добавление элемента в множество
bool_t ElemAdd(set_t* set, char* str, error_t* error)
На входе: ссылка на множество, элемент,  error_t для храения доп. информации
На выход: true или false

/Вывести мощность множества
int SetPower(set_t* set) 
На вход: ссылка на множество
На выходе: мощность множества

***************************************************************************************************************************************
Описание алгоритма слияния

Имеем 2 упорядоченных списка. Последовательно сравниваем первые элементы списков, и добавляем наименьший из них в новый список.